# -*- coding: UTF-8 -*-
# generated by Matatalab
def green_B():
    vision.color_type_threshold('green', (30,70), (-30,-18), (5,25))
    vision.color_type_threshold("green", (20,80), (-32,-15), (5,25))
    if vision.is_find_color('green'):
        motion.move_raw_position(25 * 10, 100, True)
        servo.set_current_pos_to_zero_point(3)
        servo.add_servo_pos('3', '20')
        servo.regression_zero('3', 0)

def red_B():
    vision.color_type_threshold('red', (30,70), (30,45), (15,30))
    vision.color_type_threshold("red", (20,80), (30,50), (15,35))
    if vision.is_find_color('red'):
        motion.move_raw_position(-25 * 10, 100, True)
        servo.set_current_pos_to_zero_point(3)
        servo.add_servo_pos('3', '-20')
        servo.regression_zero('3', 1)

def mid_turn_green():
    pass

def mid_turn_red():
    vision.color_type_threshold('green', (30,70), (-30,-18), (5,25))
    if vision.is_find_color('red'):
        servo.add_servo_pos('3', '-8')
        motion.move_raw_position(26 * 10, 90, True)
        servo.add_servo_pos('3', '8')
        motion.move_raw_position(26 * 10, 90, True)
        servo.regression_zero('3', 1)

@event.start
def on_event_start():
    servo.set_current_pos_to_zero_point(3)
    vision.start_camera()
    vision.set_white_balance('Open')
    vision.start_find_color()
    vision.color_type_threshold('orange', (20,60), (30,70), (10,40))
    vision.color_type_threshold('red', (30,70), (30,45), (15,30))
    vision.color_type_threshold('green', (30,70), (-30,-18), (5,25))
    while True:
        motion.start_moving('forward', 80)
        if vision.is_find_color('orange'):
            servo.add_servo_pos('3', '-12')
            motion.move_raw_position(105 * 10, 80, True)
            servo.regression_zero('3', 1)
        red_B();
        green_B();

@event.start
def on_event_start1():
    pass
